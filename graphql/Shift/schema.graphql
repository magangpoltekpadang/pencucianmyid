scalar Time @scalar(class: "App\\GraphQL\\Scalars\\TimeScalar")

type Shift {
  shift_id: ID!
  outlet_id: ID!
  outlet: Outlet @belongsTo
  shift_name: String!
  start_time: Time!
  end_time: Time!
  is_active: Boolean!
  created_at: DateTime!
  updated_at: DateTime!
}

input ShiftCreateInput {
  outlet_id: ID
  shift_name: String
  start_time: Time
  end_time: Time
  is_active: Boolean = true
}

input ShiftUpdateInput {
  outlet_id: ID
  shift_name: String!
  start_time: Time
  end_time: Time
  is_active: Boolean = true
}

extend type Query {
  shifts: [Shift!]! @all(model: "App\\Models\\Shift\\Shift")
  shift(shift_id: ID! @eq): Shift @find(model: "App\\Models \\Shift\\Shift")
  activeShifts: [Shift!]! @all(model: "App\\Models\\Shift\\Shift", scopes:["active"])
  outletShifts(outlet_id: ID! @eq): [Shift!]! @all(model: "App\\Models\\Shift\\Shift")
}

extend type Mutation {
  createShift (input: ShiftCreateInput! @spread): Shift
    @create(model: "App\\Models\\Shift\\Shift")

  updateShift(
    shift_id: ID! @eq(key: "shift_id"),
    input: ShiftUpdateInput! @spread
  ): Shift @update(model: "App\\Models\\Shift\\Shift")
    
  deleteShift(shift_id: ID! @eq(key: "shift_id")): Shift
    @delete(model: "App\\Models\\Shift\\Shift")

    toggleShiftStatus(shift_id: ID!): Shift
    @find(resolver: "App\\Models\\Shift\\Shift@toggleStatus")

}

