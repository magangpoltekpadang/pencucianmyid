type Transaction {
  transaction_id: ID!
  transaction_code: String!
  customer_id: Int!
  outlet_id: String!
  transaction_date: DateTime!
  subtotal: Float!
  discount: Float!
  tax: Float!
  final_price: Float!
  payment_status_id: Int!
  gate_opened: Boolean!
  staff_id: Int!
  shift_id: Int!
  receipt_printed: Boolean!
  whatsapp_sent: Boolean!
  notes: String!
  created_at: DateTime!
  updated_at: DateTime!
}

input TransactionInput {
  transaction_code: String
  customer_id: Int
  outlet_id: Int
  transaction_date: DateTime
  subtotal: Float
  discount: Float
  tax: Float
  final_price: Float
  payment_status_id: Int
  gate_opened: Boolean = true
  staff_id: Int
  shift_id: Int
  receipt_printed: Boolean = true
  whatsapp_sent: Boolean = true
  notes: String
}

input TransactionCreateInput {
  transaction_code: String
  customer_id: Int
  outlet_id: Int
  transaction_date: DateTime
  subtotal: Float
  discount: Float
  tax: Float
  final_price: Float
  payment_status_id: Int
  gate_opened: Boolean = true
  staff_id: Int
  shift_id: Int
  receipt_printed: Boolean = true
  whatsapp_sent: Boolean = true
  notes: String
}

input TransactionFilter {
  id: ID
  gate_opened: String
  receipt_printed: String
  whatsapp_sent: String
  search: String @where(operator: "like")
}

extend type Query {
  transactions(
    search: String
  ): [Transaction!]! @all(model: "App\\Models\\Transaction\\Transaction")

  transaction(transaction_id: ID! @eq(key: "transaction_id")): Transaction
  @find(model: "App\\Models\\Transaction\\Transaction")
}

extend type Mutation {
  createTransaction(input: TransactionCreateInput! @spread): Transaction
    @create(model: "App\\Models\\Transaction\\Transaction")

  updateTransaction(
    transaction_id: ID! @eq(key: "transaction_id"),
    input: TransactionInput! @spread
  ): Transaction @update(model: "App\\Models\\Transaction\\Transaction")
    
  deleteTransaction(transaction_id: ID! @eq(key: "transaction_id")): Transaction
    @delete(model: "App\\Models\\Transaction\\Transaction")

}

type TransactionPaginator {
  data: [Transaction!]!
  paginatorInfo: paginatorInfo!
}